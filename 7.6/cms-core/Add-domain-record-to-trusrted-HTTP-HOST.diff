From 24a5d3405b053237983d75230971abfa5a9c4ed7 Mon Sep 17 00:00:00 2001
From: Martin Tepper <martin.tepper@aoe.com>
Date: Fri, 9 Dec 2016 07:55:34 +0100
Subject: [PATCH] [FEATURE] add "DOMAIN_RECORD" to trusted HTTP_HOST
 configuration

$TYPO3_CONF_VARS['SYS']['trustedHostsPattern'] is getting
hard to maintain in bigger multi-domain projects.

---
 .../core/Classes/Utility/GeneralUtility.php   | 52 +++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/typo3/sysext/core/Classes/Utility/GeneralUtility.php b/typo3/sysext/core/Classes/Utility/GeneralUtility.php
index 126049baf4..723d9f6122 100644
--- a/typo3/sysext/core/Classes/Utility/GeneralUtility.php
+++ b/typo3/sysext/core/Classes/Utility/GeneralUtility.php
@@ -44,6 +44,7 @@ class GeneralUtility
 
     const ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL = '.*';
     const ENV_TRUSTED_HOSTS_PATTERN_SERVER_NAME = 'SERVER_NAME';
+    const ENV_TRUSTED_HOSTS_PATTERN_DOMAIN_RECORD = 'DOMAIN_RECORD';
 
     /**
      * State of host header value security check
@@ -3706,6 +3707,9 @@ class GeneralUtility
 
         if ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === self::ENV_TRUSTED_HOSTS_PATTERN_ALLOW_ALL) {
             static::$allowHostHeaderValue = true;
+        } elseif ($GLOBALS['TYPO3_CONF_VARS']['SYS']['trustedHostsPattern'] === self::ENV_TRUSTED_HOSTS_PATTERN_DOMAIN_RECORD) {
+            $row = static::getDomainStartPageRecord($hostHeaderValue, static::getIndpEnv('SCRIPT_NAME'));
+            static::$allowHostHeaderValue = !empty($row);
         } else {
             static::$allowHostHeaderValue = static::hostHeaderValueMatchesTrustedHostsPattern($hostHeaderValue);
         }
@@ -3713,6 +3717,54 @@ class GeneralUtility
         return static::$allowHostHeaderValue;
     }
 
+    /**
+     * Will find the page carrying the domain record matching the input domain.
+     *
+     * @see TYPO3\CMS\Frontend\Page\PageRepository::getDomainStartPage()
+     * @param string $domain Domain name to search for. Eg. "www.typo3.com". Typical the HTTP_HOST value.
+     * @param string $path Path for the current script in domain. Eg. "/somedir/subdir". Typ. supplied by \TYPO3\CMS\Core\Utility\GeneralUtility::getIndpEnv('SCRIPT_NAME')
+     * @return array|false
+     */
+    protected static function getDomainStartPageRecord($domain, $path) {
+        $parsedHostValue = parse_url('http://' . $domain);
+        if (isset($parsedHostValue['port']) && !MathUtility::canBeInterpretedAsInteger($parsedHostValue['port'])) {
+            // a non-numeric port is accepted by most servers and could be used
+            // to spoof HTTP_HOST (like "Host: example.com:@evil.com")
+            return FALSE;
+        }
+        $domain = $parsedHostValue['host'];
+        if (!$domain) {
+            return FALSE;
+        }
+        $path = trim(preg_replace('/\\/[^\\/]*$/', '', $path));
+
+        $res = $GLOBALS['TYPO3_DB']->exec_SELECTquery(
+            'sys_domain.domainName AS domainName',
+            'pages,sys_domain',
+            'pages.uid=sys_domain.pid
+                AND sys_domain.domainName LIKE "' . $GLOBALS['TYPO3_DB']->escapeStrForLike($domain, 'sys_domain') . '%"' .
+                \TYPO3\CMS\Backend\Utility\BackendUtility::deleteClause('sys_domain') .
+                \TYPO3\CMS\Backend\Utility\BackendUtility::BEenableFields('sys_domain')
+        );
+
+        $returnValue = FALSE;
+        while ($row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res)) {
+            $parsedHostValue = parse_url('http://' . $row['domainName']);
+            if (!isset($parsedHostValue['host']) || $parsedHostValue['host'] !== $domain) {
+                continue;
+            }
+            if (isset($parsedHostValue['path'])) {
+                if (strncmp($path, $parsedHostValue['path'], strlen($parsedHostValue['path'])) !== 0) {
+                    continue;
+                }
+            }
+            $returnValue = $row;
+            break;
+        }
+        $GLOBALS['TYPO3_DB']->sql_free_result($res);
+        return $returnValue;
+    }
+
     /**
      * Checks if the provided host header value matches the trusted hosts pattern without any preprocessing.
      *
-- 
2.23.0

